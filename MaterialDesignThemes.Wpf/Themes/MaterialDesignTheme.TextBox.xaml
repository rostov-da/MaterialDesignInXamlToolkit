<ResourceDictionary
    x:Class="MaterialDesignThemes.Wpf.MaterialDesignThemeTextBox"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="MaterialDesignTheme.ValidationErrorTemplate.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:TextFieldHintVisibilityConverter x:Key="TextFieldHintVisibilityConverter" />

    <Style
        x:Key="MaterialDesignTextBox"
        x:Name="MaterialDesignTextBox"
        TargetType="{x:Type TextBox}">
        <EventSetter Event="KeyUp" Handler="TextBox_KeyUp" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="wpf:TextFieldAssist.TextBoxViewMargin" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CaretBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource MaterialDesignValidationErrorTemplate}" />
        <Setter Property="wpf:TextFieldAssist.IncludeSpellingSuggestions" Value="{Binding RelativeSource={RelativeSource Self}, Path=(SpellCheck.IsEnabled)}" />

        <!--  cludge the default context menu  -->

        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Command="Cut" Header="_Cut">
                        <MenuItem.Icon>
                            <wpf:PackIcon Kind="ContentCut" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="Copy" Header="_Copy">
                        <MenuItem.Icon>
                            <wpf:PackIcon Kind="ContentCopy" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="Paste" Header="_Paste">
                        <MenuItem.Icon>
                            <wpf:PackIcon Kind="ContentPaste" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="textFieldBoxBorder" SnapsToDevicePixels="True">
                        <Grid>
                            <Border
                                x:Name="border"
                                Padding="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                                <Grid
                                    x:Name="textFieldGrid"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ScrollViewer
                                        x:Name="PART_ContentHost"
                                        Focusable="false"
                                        HorizontalScrollBarVisibility="Hidden"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                        VerticalScrollBarVisibility="Hidden" />
                                    <wpf:SmartHint
                                        x:Name="Hint"
                                        Padding="{TemplateBinding Padding}"
                                        FloatingOffset="{Binding Path=(wpf:HintAssist.FloatingOffset), RelativeSource={RelativeSource TemplatedParent}}"
                                        FloatingScale="{Binding Path=(wpf:HintAssist.FloatingScale), RelativeSource={RelativeSource TemplatedParent}}"
                                        FontSize="{TemplateBinding FontSize}"
                                        Hint="{Binding Path=(wpf:HintAssist.Hint), RelativeSource={RelativeSource TemplatedParent}}"
                                        HintOpacity="{Binding Path=(wpf:HintAssist.HintOpacity), RelativeSource={RelativeSource TemplatedParent}}"
                                        HintProxy="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:HintProxyFabricConverter.Instance}}"
                                        UseFloating="{Binding Path=(wpf:HintAssist.IsFloating), RelativeSource={RelativeSource TemplatedParent}}" />
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Silver" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="wpf:HintAssist.IsFloating" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Hint" Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                            <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="wpf:HintAssist.IsFloating" Value="True">
                            <Setter TargetName="border" Property="Margin" Value="0,12,0,0" />
                        </Trigger>
                        <Trigger Property="wpf:TextFieldAssist.HasTextFieldBox" Value="True">
                            <Setter Property="VerticalContentAlignment" Value="Top" />
                            <Setter TargetName="textFieldBoxBorder" Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxBackground}" />
                            <Setter TargetName="textFieldBoxBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="textFieldBoxBorder" Property="Padding" Value="0,8,0,0" />
                            <Setter TargetName="textFieldGrid" Property="Margin" Value="16,0,16,0" />
                            <Setter TargetName="border" Property="BorderThickness" Value="2" />
                            <Setter TargetName="Hint" Property="Margin" Value="0,0,0,16" />
                            <Setter TargetName="PART_ContentHost" Property="Margin" Value="0,8,0,8" />
                        </Trigger>
                        <Trigger Property="wpf:TextFieldAssist.HasTextAreaBox" Value="True">
                            <Setter Property="VerticalContentAlignment" Value="Top" />
                            <Setter TargetName="textFieldBoxBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="textFieldBoxBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="1" />
                            <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{DynamicResource MaterialDesignTextAreaBorder}" />
                            <Setter TargetName="textFieldBoxBorder" Property="Padding" Value="0,8,0,0" />
                            <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-1" />
                            <Setter TargetName="textFieldGrid" Property="Margin" Value="16,0,16,0" />
                            <Setter TargetName="border" Property="BorderThickness" Value="0" />
                            <Setter TargetName="Hint" Property="Margin" Value="0,0,0,16" />
                            <Setter TargetName="PART_ContentHost" Property="Margin" Value="0,8,0,8" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="wpf:TextFieldAssist.HasTextAreaBox" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="textFieldBoxBorder" Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxDisabledBackground}" />
                            <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{DynamicResource MaterialDesignTextAreaInactiveBorder}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="wpf:TextFieldAssist.HasTextAreaBox" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray" />
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="true" />
                                <Condition Property="IsReadOnly" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                        </MultiTrigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="wpf:TextFieldAssist.HasTextAreaBox" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-2" />
                            <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="2" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="wpf:TextFieldAssist.HasTextAreaBox" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-2" />
                            <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="2" />
                            <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True" />
                                <Condition Property="wpf:TextFieldAssist.HasTextAreaBox" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-2" />
                            <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="2" />
                            <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="MaterialDesignFloatingHintTextBox"
        BasedOn="{StaticResource MaterialDesignTextBox}"
        TargetType="{x:Type TextBox}">
        <Setter Property="wpf:HintAssist.IsFloating" Value="True" />
    </Style>

    <Style
        x:Key="MaterialDesignTextFieldBoxTextBox"
        BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}"
        TargetType="{x:Type TextBox}">
        <Setter Property="wpf:TextFieldAssist.HasTextFieldBox" Value="True" />
    </Style>

    <Style
        x:Key="MaterialDesignTextAreaTextBox"
        BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}"
        TargetType="{x:Type TextBox}">
        <Setter Property="wpf:TextFieldAssist.HasTextAreaBox" Value="True" />
    </Style>

    <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="TextBox" />

</ResourceDictionary>
